bind '"\e[0n": redraw-current-line'

cmux_comp() {
  local cmd=$1
  local cur=$2
  local prev=$3
  local prefix="${COMP_WORDS[COMP_CWORD]}"

  if [ ${COMP_CWORD} -eq 1 ]; then
    cmux_cmd_cnt=$(($(cmux | sed '1,/Commands:$/d;/^$/,$d' | wc -l)+2))
    cmux_cmd=$(cmux | sed $'s/\xc2\xa0/ /g' | sed '1,/Commands:$/d;/^$/,$d;s/^ *//g' \
               | fzf +m --inline-info --reverse --header="COMMANDS" --height=$cmux_cmd_cnt --tiebreak=begin --query="$prefix" \
               | awk '{print $1}')

    COMPREPLY=( "$cmux_cmd" )
    printf '\e[5n'
    return
  fi

  if [ ${COMP_CWORD} -eq 2 ]; then
    cmux_cmd=$prev
    case $prev in
      manage-cloudera-scm-agent|scmagent)
      cmd_cnt=$(($(cmux $cmux_cmd -h \
                   | sed '1,/options:$/d;/^$/,$d;s/[^a-z_]/ /g' \
                   | xargs -n 1 | wc -l)+2))
      cmd=$(cmux $cmux_cmd -h \
            | sed '1,/options:$/d;/^$/,$d;s/[^a-z_]/ /g' \
            | xargs -n 1 \
            | fzf +m --inline-info --reverse --header="OPTIONS" --height=$cmd_cnt --tiebreak=begin --query="$prefix" \
            | awk '{print $1}')
      COMPREPLY=( "$cmd" )
      printf '\e[5n'
      ;;
      *)
        opt_cnt=$(cmux $cmux_cmd -h | grep "\-[a-z]*, \-\-" | wc -l)
        opt=$(cmux $cmux_cmd -h | grep "\-[a-z]*, \-\-" \
              | fzf +m --inline-info --reverse --header="OPTIONS" --height=$((opt_cnt+2)) --tiebreak=begin --query="$prefix" \
              | awk '{print $2}')
        COMPREPLY=( "$opt" )
        printf '\e[5n'
      ;;
    esac
    return
  fi

  if [ ${COMP_CWORD} -ge 3 ]; then
    cmux_cmd=${COMP_WORDS[1]}
    opt_cnt=$(cmux $cmux_cmd -h | grep "\-[a-z]*, \-\-" | wc -l)
    case $prev in
      -h|--help|-q|--query|-f|--file|-l|--list)
      ;;
      *)
        opt=$(cmux $cmux_cmd -h | grep "\-[a-z]*, \-\-" \
          | fzf +m --inline-info --reverse --header="OPTIONS" --height=$((opt_cnt+2)) --tiebreak=begin --query="$prefix" \
          | awk '{print $2}')
        COMPREPLY=( "$opt" )
        printf '\e[5n'
        return
      ;;
    esac
  fi
}

complete -F cmux_comp -o default -o bashdefault cmux
