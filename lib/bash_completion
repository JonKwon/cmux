#!/usr/bin/env bash
# CMUX interactive command completion for Bash

bind '"\e[0n": redraw-current-line'

# Set FZF_DEFAULT_OPTS
# shellcheck disable=2153
fzf_default_opts="$FZF_DEFAULT_OPTS --no-multi --inline-info --reverse "

# Find the height of the FZF window to display search results
#
# Globals:
#   None
# Arguments:
#   $1 number of lines of search results
# Returns:
#   the height fo the FZF window
cmux::fzf::height() {
  echo $(( $1 + 2 ))
}

# Select the CMUX command
#
# Globals:
#   fzf_default_opts fzf_query_str
# Arguments:
#   None
# Returns:
#   CMUX command
cmux::completion::commands() {
  local cmux_cmds=()

  readarray -t cmux_cmds <<< "$(
      cmux |
      sed $'s/\xc2\xa0/ /g' |
      sed '1,/Commands:$/d;/^$/,$d;s/^ *//g'
  )"

  COMPREPLY=(
    "$(
      printf '%s\n' "${cmux_cmds[@]}" |
      FZF_DEFAULT_OPTS="$fzf_default_opts" \
      fzf --header="COMMANDS" \
          --query="$fzf_query_str" \
          --height="$(cmux::fzf::height "${#cmux_cmds[@]}")" |
      awk '{print $1}'
    )"
  )

  printf '\e[5n'
  return
}

# Select the CMUX command option
#
# Globals:
#   current fzf_default_opts comp_words
# Arguments:
#   None
# Returns:
#   CMUX command option
cmux::completion::options() {
  local scmagent_cmd cmux_cmd_opts _comp_words

  # If '--help' option has been already selected
  if echo "${COMP_WORDS[@]}" | grep -E " -h| --help" > /dev/null ; then
    return 0
  fi

  case "${COMP_WORDS[1]}" in
    # If only one command option can be selected
    ssh-tmux|tssh)
      [[ "$COMP_CWORD" -gt 2 ]] && return 0
      ;;
    # If manage-cloudera-scm-agent is selected
    manage-cloudera-scm-agent|scmagent)
      if [[ "$COMP_CWORD" -eq 2 ]]; then
        readarray -t scmagent_cmd <<< "$(
            cmux "${COMP_WORDS[1]}" --help |
            sed '1,/Scmagent commands:$/d;/^$/,$d;s/[^a-z_]/ /g' |
            xargs -n 1
        )"

        COMPREPLY=(
          "$(
            printf '%s\n' "${scmagent_cmd[@]}" |
            FZF_DEFAULT_OPTS="$fzf_default_opts" \
            fzf --header="COMMAND" \
                --query="$fzf_query_str" \
                --height="$(cmux::fzf::height "${#scmagent_cmd[@]}")" |
            awk '{print $1}'
          )"
        )
        printf '\e[5n'
        return
      fi
      ;;
  esac

  # Command options
  readarray -t cmux_cmd_opts <<< "$(
    cmux "${COMP_WORDS[1]}" --help |
    sed '1,/Options:$/d;/^$/,$d;s/^ *//g'
  )"

  # shellcheck disable=2206
  _comp_words=(${COMP_WORDS[@]:2})
  if [[ -n $fzf_query_str ]]; then
    unset '_comp_words[${#_comp_words[@]}-1]'
  fi

  # Remove selected option from command options
  # shellcheck disable=SC2184,SC2068
  for i in "${!cmux_cmd_opts[@]}"; do
    for comp_word in ${_comp_words[@]}; do
      if echo "${cmux_cmd_opts[$i]}" | grep -w -- "$comp_word" > /dev/null; then
        unset cmux_cmd_opts[$i]
      fi
    done
  done

  COMPREPLY=(
    "$(
      printf '%s\n' "${cmux_cmd_opts[@]}" |
      FZF_DEFAULT_OPTS="$fzf_default_opts" \
      fzf --header="OPTIONS" \
          --query="$fzf_query_str" \
          --height="$(cmux::fzf::height "${#cmux_cmd_opts[@]}")" |
      awk '{print $2}'
    )"
  )

  printf '\e[5n'
  return
}

cmux::completion () {
  fzf_query_str="${COMP_WORDS[COMP_CWORD]}"

  if [[ "${COMP_CWORD}" -eq 1 ]]; then
    cmux::completion::commands
  else
    cmux::completion::options
  fi
}

complete -F cmux::completion -o default -o bashdefault cmux
